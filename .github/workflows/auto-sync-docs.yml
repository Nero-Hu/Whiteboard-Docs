name: Auto Sync Fastboard Docs

on:
  push:
    branches: [master]
    paths: 
      # Fastboard 发版说明文件（仅中文）
      - 'android/Fastboard/CN/release-notes-fb.android.mdx'
      - 'ios/Fastboard/CN/release-notes-fb.ios.mdx'
      - 'web/Fastboard/CN/release-notes-fb.javascript.mdx'
      # Fastboard API文档文件（仅中文）
      - 'android/Fastboard/CN/fastboard-api.mdx'
      - 'ios/Fastboard/CN/fastboard-api.ios.mdx'
      - 'web/Fastboard/CN/fastboard-api.javascript.mdx'
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to sync (all/android/ios/web)'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - android
          - ios
          - web
      force:
        description: 'Force sync even if no changes detected'
        required: false
        default: false
        type: boolean
      dry_run:
        description: 'Test mode - detect changes without creating PR'
        required: false
        default: false
        type: boolean

jobs:
  sync-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Whiteboard-Docs
      uses: actions/checkout@v4
      with:
        path: whiteboard-docs
        token: ${{ secrets.DOCS_TOKEN }}
    
    - name: Checkout shengwang-doc-source
      uses: actions/checkout@v4
      with:
        repository: AgoraIO/shengwang-doc-source
        path: shengwang-doc-source
        token: ${{ secrets.SYNC_TOKEN }}
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        cd whiteboard-docs
        pip install -r tools/requirements.txt
    
    - name: Create sync config
      run: |
        cd whiteboard-docs
        
        # 创建配置文件（不包含敏感信息）
        cat > config/sync_config.yaml << 'EOF'
        # Fastboard文档同步配置文件
        # 用于配置从Whiteboard-Docs仓库同步到shengwang-doc-source仓库
        
        # 源仓库配置
        source:
          repo_path: "."
          repo_url: "https://github.com/agora/Whiteboard-Docs.git"
        
        # 目标仓库配置
        target:
          repo_path: "../shengwang-doc-source"
          repo_url: "https://github.com/AgoraIO/shengwang-doc-source.git"
          repo_owner: "AgoraIO"
          repo_name: "shengwang-doc-source"
          github_token: "PLACEHOLDER_TOKEN"
        
        # 同步映射配置
        sync_mapping:
          # 发版说明文件映射（仅Fastboard中文）
          release_notes:
            "android/Fastboard/CN/release-notes-fb.android.mdx": "docs/whiteboard/fastboard-sdk"
            "ios/Fastboard/CN/release-notes-fb.ios.mdx": "docs/whiteboard/fastboard-sdk"
            "web/Fastboard/CN/release-notes-fb.javascript.mdx": "docs/whiteboard/fastboard-sdk"
          
          # API文档文件映射（仅Fastboard中文）
          api_docs:
            "android/Fastboard/CN/fastboard-api.mdx": "docs-api-reference/fastboard"
            "ios/Fastboard/CN/fastboard-api.ios.mdx": "docs-api-reference/fastboard"
            "web/Fastboard/CN/fastboard-api.javascript.mdx": "docs-api-reference/fastboard"
        
        # 日志配置
        logging:
          level: "INFO"
          max_files: 10
          max_size: "10MB"
        
        # 同步选项
        sync_options:
          backup_before_sync: true
          verify_after_sync: true
          max_concurrent_syncs: 3
          max_file_size_mb: 50
        EOF
    
    - name: Run sync script
      env:
        GITHUB_TOKEN: ${{ secrets.SYNC_TOKEN }}
      run: |
        cd whiteboard-docs
        
        # 构建命令参数
        CMD="python tools/sync_docs.py --non-interactive --config config/sync_config.yaml"
        
        # 添加平台参数（如果指定）
        if [ "${{ github.event.inputs.platform }}" != "" ]; then
          CMD="$CMD --platform ${{ github.event.inputs.platform }}"
        fi
        
        # 添加强制同步参数
        if [ "${{ github.event.inputs.force }}" == "true" ]; then
          CMD="$CMD --force"
        fi
        
        # 添加测试模式参数
        if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
          CMD="$CMD --dry-run"
        fi
        
        echo "执行命令: $CMD"
        
        # 执行同步脚本
        $CMD
    
    - name: Upload logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: sync-logs-${{ github.run_id }}
        path: whiteboard-docs/logs/
        retention-days: 30
    
    - name: Notify on failure
      if: failure()
      run: |
        echo "❌ 文档同步失败！"
        echo "请检查日志文件获取详细信息。"
        echo "失败时间: $(date)"
        echo "工作流ID: ${{ github.run_id }}" 